//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenerousAPI.DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GenerousAPIEntities : DbContext
    {
        public GenerousAPIEntities()
            : base("name=GenerousAPIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CardType> CardTypes { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<TransactionMode> TransactionModes { get; set; }
        public virtual DbSet<PaymentGatewayConfig> PaymentGatewayConfigs { get; set; }
        public virtual DbSet<PaymentGatewayType> PaymentGatewayTypes { get; set; }
        public virtual DbSet<PaymentProfile> PaymentProfiles { get; set; }
        public virtual DbSet<BankAccount> BankAccounts { get; set; }
        public virtual DbSet<TransactionDetail> TransactionDetails { get; set; }
        public virtual DbSet<PaymentProfileBinInfo> PaymentProfileBinInfoes { get; set; }
        public virtual DbSet<PaymentProcessStatu> PaymentProcessStatus { get; set; }
        public virtual DbSet<PaymentToOrganisationBatch> PaymentToOrganisationBatches { get; set; }
        public virtual DbSet<TransactionHistory> TransactionHistories { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<PaymentToOrganisationBatchTransactionLog> PaymentToOrganisationBatchTransactionLogs { get; set; }
        public virtual DbSet<PaymentToOrganisationBatchLineItem> PaymentToOrganisationBatchLineItems { get; set; }
        public virtual DbSet<OrganisationFeeProcessing> OrganisationFeeProcessings { get; set; }
        public virtual DbSet<ExpiringCreditCardsForOrganisation> ExpiringCreditCardsForOrganisations { get; set; }
        public virtual DbSet<OrganisationPromoFee> OrganisationPromoFees { get; set; }
        public virtual DbSet<OrganisationStandardFee> OrganisationStandardFees { get; set; }
    
        public virtual int AssignBatchLineItemToApprovedDonations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignBatchLineItemToApprovedDonations");
        }
    
        public virtual int AssignBatchToApprovedDonations(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignBatchToApprovedDonations", batchIdParameter);
        }
    
        public virtual int UpdatePaymentToOrganisationBatchProcessStatus(Nullable<System.Guid> batchId, Nullable<System.DateTime> actionedDateTime, string actionedBy)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            var actionedDateTimeParameter = actionedDateTime.HasValue ?
                new ObjectParameter("ActionedDateTime", actionedDateTime) :
                new ObjectParameter("ActionedDateTime", typeof(System.DateTime));
    
            var actionedByParameter = actionedBy != null ?
                new ObjectParameter("ActionedBy", actionedBy) :
                new ObjectParameter("ActionedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePaymentToOrganisationBatchProcessStatus", batchIdParameter, actionedDateTimeParameter, actionedByParameter);
        }
    }
}
